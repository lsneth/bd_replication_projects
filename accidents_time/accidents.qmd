---
title: 'Accidents Replication'
subtitle: 'Big Data Programming - Hathaway'
author: 'Luke Nethercott'
date: 2.3.2024
format:
  html:
    embed-resources: true
---

These charts show car crash data by day, and by hour. I chose to use a box plot for weekdays because that's what we did in class haha. I chose to use a dot plot with dotted connecting lines for the second chart because it's easy to tell each hour count. The dotted lines kind of imply a non-continuous line, but still make it deasier to compare slopes. (and because there was a good example in the lets plot docs)

```{python} 
import polars as pl
from lets_plot import *
LetsPlot.setup_html()
```

```{python}
# dat = pl.read_csv("Motor_Vehicle_Collisions_-_Crashes_20240124.csv")\
#   .with_columns(
#     pl.col("CRASH DATE").str.to_date("%m/%d/%Y").alias("date"),
#     pl.col("CRASH TIME").str.to_time("%H:%M").alias("time"),  
#     pl.concat_str(["CRASH DATE","CRASH TIME"], separator=" ")\  
#       .str.to_datetime("%m/%d/%Y %H:%M").alias("date_time")
#   )
# dat.write_parquet("ny_crashes.parquet", compression="zstd", compression_level=15)
```

```{python}
dat = pl.read_parquet("ny_crashes.parquet")
```

```{python}
# Create a new column that reports the date and base hour the accident happened.  
# Use that column to get an accident rate and injury rate per hour data set.
rate_hour = dat\
  .with_columns(pl.col('date_time').dt.truncate('1h').alias('hour_floor'))\
  .with_columns(pl.col('hour_floor').dt.hour())\
  .group_by('hour_floor')\
  .agg(
    # pl.col('NUMBER OF PERSONS INJURED').sum().alias('injured_total'),
    pl.col('BOROUGH').count().alias('accident_count')
  )

rate_hour.head()
```

```{python}
rate_day = dat\
  .with_columns(pl.col('date_time').dt.truncate('1d').alias('day_floor'))\
  .group_by('day_floor')\
  .agg(
    pl.col('NUMBER OF PERSONS INJURED').sum().alias('injured_total'),
    pl.col('BOROUGH').count().alias('accident_count')
  )\
  .with_columns(pl.col("day_floor").dt.weekday().alias("weekday")) 

rate_day.head()

```

```{python}
# Now we want to create two visuals: the number of chrashes per hour and one that shows the number of injuries per day  
# Use `lets-plot` and `plotly`to build interactive visualizations displaying the rate of injuries over time.
ggplot(rate_day.sort('weekday'), aes(x='weekday', y='accident_count')) +\
 geom_boxplot() +\
 scale_x_discrete()
```

```{python}
ggplot(rate_hour.sort('hour_floor')) + \
  geom_point(aes(x='hour_floor', y='accident_count', color='accident_count'), alpha=0.7, size=4) + \
  scale_color_discrete() + \
  scale_x_discrete() +\
  theme(legend_position='none') + \
  geom_line(aes(x='hour_floor', y='accident_count'), linetype=3)
```

Of the data we have, there were only 2 hours of the day, 4 and 5pm, that had over 100,000 crashes total. Probably as expected, as people are coming home from work around that time. Intrestingly, morning commute crashes are significanly less rare. Only around 80,000 compared to the 102,000 at 4pm. This could be due to people being well rested and less stressed in the mornings, but we can't say for sure without more data.